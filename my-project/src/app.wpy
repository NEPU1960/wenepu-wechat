<style lang="less">

@import "./icon/iconfont";
@import "./less/config";
@import "./less/app";
.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
}
</style>

<script>
import wepy from "wepy";
import "wepy-async-function";
import Http from "./util/http";
import db from "./util/db";
import Login from "./util/login";
import { setStore } from 'wepy-redux'
import configStore from './store'

const store = configStore()
setStore(store)

export default class extends wepy.app {
  config = {
    pages: [
      'pages/index',
      'pages/newsLists',
      'pages/my/my',
      'pages/login',
      'pages/schedule',
      'pages/detail',
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: 'We东油',
      navigationBarTextStyle: 'black'
    },
  //   tabBar: {
  //     selectedColor: "#3e9ecf",
  //     color: "#707070",
  //     list: [
  //       {
  //         pagePath: "pages/index",
  //         text: "首页",
  //         iconPath: "icon/home.png",
  //         selectedIconPath: "icon/home@select.png"
  //       },
  //       // {
  //       //   pagePath: "pages/course/lists",
  //       //   text: "寻课",
  //       //   iconPath: "icon/course.png",
  //       //   selectedIconPath: "icon/course@select.png"
  //       // },
  //       {
  //         pagePath: "pages/newsLists",
  //         text: "资讯",
  //         iconPath: "icon/news.png",
  //         selectedIconPath: "icon/news@select.png"
  //       },
  //       {
  //         pagePath: "pages/my/my",
  //         text: "个人中心",
  //         iconPath: "icon/user.png",
  //         selectedIconPath: "icon/user@select.png"
  //       }
  //     ]
  //   }
  // }

  globalData = {
    userInfo: null
  }

  constructor () {
    super()
    this.use('requestfix')
  }

  onLaunch() {
    this.testAsync()
  }

  sleep (s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async testAsync () {
    const data = await this.sleep(3)
    console.log(data)
  }

  getUserInfo(cb) {
    const that = this
    if (this.globalData.userInfo) {
      return this.globalData.userInfo
    }
    wepy.getUserInfo({
      success (res) {
        that.globalData.userInfo = res.userInfo
        cb && cb(res.userInfo)
      }
    })
  }
}
</script>
